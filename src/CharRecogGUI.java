
import java.awt.Color;
import java.awt.Component;
import java.awt.Dimension;
import java.awt.GridLayout;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.awt.event.MouseEvent;
import java.awt.event.MouseListener;
import java.io.File;
import java.util.List;
import javax.swing.JButton;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;

/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
/**
 *
 * @author gabriel
 */
public class CharRecogGUI extends javax.swing.JFrame implements NNObserver {

    /**
     * Creates new form CharRecogGUI
     */
    public CharRecogGUI() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {
        bindingGroup = new org.jdesktop.beansbinding.BindingGroup();

        jLabel1 = new javax.swing.JLabel();
        txtFilePath = new javax.swing.JTextField();
        btSelectFile = new javax.swing.JButton();
        btLoad = new javax.swing.JButton();
        txtNumInstances = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        sliderLearningRate = new javax.swing.JSlider();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        sliderEpoch = new javax.swing.JSlider();
        progressTrain = new javax.swing.JProgressBar();
        btTrain = new javax.swing.JButton();
        panelSupport = new javax.swing.JPanel();
        panelMatriceButtons = new javax.swing.JPanel();
        lblErrorRate = new javax.swing.JLabel();
        lblEpoch = new javax.swing.JLabel();
        btTest = new javax.swing.JButton();
        btClearAll = new javax.swing.JButton();
        checkVerboseTrain = new javax.swing.JCheckBox();
        checkDrawMode = new javax.swing.JCheckBox();
        checkBias = new javax.swing.JCheckBox();
        checkSeedWeights = new javax.swing.JCheckBox();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel1.setText("File Path");

        txtFilePath.setEditable(false);

        btSelectFile.setText("Select File");
        btSelectFile.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btSelectFileActionPerformed(evt);
            }
        });

        btLoad.setText("Load");
        btLoad.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btLoadActionPerformed(evt);
            }
        });

        jLabel2.setText("Architecture");

        sliderLearningRate.setValue(20);

        jLabel4.setText("Learning Rate:");

        jLabel5.setText("Epoch:");

        sliderEpoch.setMaximum(10000);
        sliderEpoch.setValue(1000);

        progressTrain.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        progressTrain.setStringPainted(true);

        btTrain.setText("Train");
        btTrain.setEnabled(false);
        btTrain.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btTrainActionPerformed(evt);
            }
        });

        panelSupport.setBackground(new java.awt.Color(204, 204, 204));
        panelSupport.setLayout(new java.awt.BorderLayout());

        panelMatriceButtons.setLayout(new java.awt.GridLayout(7, 5));
        panelSupport.add(panelMatriceButtons, java.awt.BorderLayout.CENTER);

        org.jdesktop.beansbinding.Binding binding = org.jdesktop.beansbinding.Bindings.createAutoBinding(org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ_WRITE, sliderLearningRate, org.jdesktop.beansbinding.ELProperty.create("${value}"), lblErrorRate, org.jdesktop.beansbinding.BeanProperty.create("text"));
        bindingGroup.addBinding(binding);

        binding = org.jdesktop.beansbinding.Bindings.createAutoBinding(org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ_WRITE, sliderEpoch, org.jdesktop.beansbinding.ELProperty.create("${value}"), lblEpoch, org.jdesktop.beansbinding.BeanProperty.create("text"));
        bindingGroup.addBinding(binding);

        btTest.setText("Test");
        btTest.setEnabled(false);
        btTest.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btTestActionPerformed(evt);
            }
        });

        btClearAll.setText("Clear All");
        btClearAll.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btClearAllActionPerformed(evt);
            }
        });

        checkVerboseTrain.setText("Verbose");

        checkDrawMode.setText("Draw Mode");

        checkBias.setText("Bias");

        checkSeedWeights.setSelected(false);
        checkSeedWeights.setText("Seed Weights");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jLabel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(lblEpoch, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lblErrorRate, javax.swing.GroupLayout.PREFERRED_SIZE, 64, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(sliderLearningRate, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(sliderEpoch, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                    .addComponent(panelSupport, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel2)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(txtNumInstances))
                            .addComponent(txtFilePath))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(btSelectFile, javax.swing.GroupLayout.DEFAULT_SIZE, 113, Short.MAX_VALUE)
                            .addComponent(btLoad, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(progressTrain, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btTrain, javax.swing.GroupLayout.PREFERRED_SIZE, 111, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(btClearAll)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btTest, javax.swing.GroupLayout.PREFERRED_SIZE, 101, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel1)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(checkVerboseTrain)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(checkDrawMode)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(checkBias)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(checkSeedWeights)))
                        .addGap(0, 68, Short.MAX_VALUE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtFilePath, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btSelectFile))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(txtNumInstances, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btLoad))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(sliderLearningRate, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(lblErrorRate)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(sliderEpoch, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel5)
                    .addComponent(lblEpoch, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(btTrain, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(progressTrain, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(checkVerboseTrain)
                    .addComponent(checkDrawMode)
                    .addComponent(checkBias)
                    .addComponent(checkSeedWeights))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(panelSupport, javax.swing.GroupLayout.DEFAULT_SIZE, 419, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(btTest, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btClearAll, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );

        bindingGroup.bind();

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btLoadActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btLoadActionPerformed
        // TODO add your handling code here:
        LoadFromFile lff = new LoadFromFile();
        lff.setFilePath(txtFilePath.getText());
        instances = lff.getInstances();
        cols = lff.getCols();
        rows = lff.getRows();
        JButton button;
        txtNumInstances.setText(cols * rows + ";" + instances.size() + "");
        panelMatriceButtons.removeAll();
        panelMatriceButtons.setLayout(new GridLayout(rows, cols));

        for (int i = 0; i < cols * rows; i++) {
            button = new JButton(".");
            button.setPreferredSize(new Dimension(30, 70));
            panelMatriceButtons.add(button);
            button.addMouseListener(new MouseListener() {

                @Override
                public void mouseClicked(MouseEvent e) {
                }

                @Override
                public void mousePressed(MouseEvent e) {
                }

                @Override
                public void mouseReleased(MouseEvent e) {
                }

                @Override
                public void mouseEntered(MouseEvent e) {
                    if (!checkDrawMode.isSelected()) {
                        return;
                    }

                    JButton b = (JButton) e.getSource();
                    if (e.getButton() != MouseEvent.NOBUTTON) {
                        b.setText("#");
                        b.setBackground(Color.BLACK);
                    } else {
                        b.setText(".");
                        b.setBackground(btClearAll.getBackground());
                    }
                }

                @Override
                public void mouseExited(MouseEvent e) {
                }
            });

            button.addActionListener(new ActionListener() {

                @Override
                public void actionPerformed(ActionEvent e) {
                    JButton b = (JButton) e.getSource();
                    if (b.getText().equals(".")) {
                        b.setText("#");
                        b.setBackground(Color.BLACK);
                    } else {
                        b.setText(".");
                        b.setBackground(btClearAll.getBackground());
                    }
                }
            });
        }
        panelMatriceButtons.revalidate();
        panelSupport.revalidate();
        repaint();
        pack();

        btTrain.setEnabled(true);
    }//GEN-LAST:event_btLoadActionPerformed

    private void btTrainActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btTrainActionPerformed
        // TODO add your handling code here:
        String[] arch = txtNumInstances.getText().split(";");
        int[] archValues = new int[arch.length];
        for (int i = 0; i < arch.length; i++) {
            archValues[i] = Integer.parseInt(arch[i]);
        }

        btTest.setEnabled(false);
        btTrain.setEnabled(false);
        nn = new NNBackProp(checkBias.isSelected(), archValues);
        NNBackProp.setLearningRate(sliderLearningRate.getValue() / 100.0);
        NNBackProp.setEpoch(sliderEpoch.getValue());

        nn.setSeedRandom(checkSeedWeights.isSelected());
        nn.setSeedValue(1);

        nn.setWeights();
        nn.setTrainingValues(instances);

        nn.setObserver(this);
        Thread t = new Thread() {

            @Override
            public void run() {
                long time = System.currentTimeMillis();
                nn.train(false);
                time = System.currentTimeMillis() - time;
                if (checkVerboseTrain.isSelected()) {
                    System.out.println(time);
                }
                btTest.setEnabled(true);
                btTrain.setEnabled(true);
            }

        };
        t.start();

    }//GEN-LAST:event_btTrainActionPerformed

    private void btSelectFileActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btSelectFileActionPerformed
        // TODO add your handling code here:
        JFileChooser jfc;
        if (dataset == null) {
            jfc = new JFileChooser(System.getProperty("user.home"));
        } else {
            jfc = new JFileChooser(dataset.getParent());
        }

        if (jfc.showOpenDialog(this) == JFileChooser.APPROVE_OPTION) {
            dataset = jfc.getSelectedFile();
            txtFilePath.setText(jfc.getSelectedFile().getAbsolutePath());
        }
    }//GEN-LAST:event_btSelectFileActionPerformed

    private void btTestActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btTestActionPerformed
        // TODO add your handling code here:
        double[] testInstance = generateTestArray();
        double[] fakeOut = new double[instances.size()];
        long time = System.currentTimeMillis();
        nn.setTrainingValues(testInstance, fakeOut);
        nn.feedForward();

        double[] out = nn.getOutput();
        int asciiCode = NNMathUtils.maxValueIndex(out) + 65;

        time = System.currentTimeMillis() - time;

        NNBackProp.network[NNBackProp.network.length - 1][NNMathUtils.maxValueIndex(out)].targetOutput = 1;
        double sigOut = NNBackProp.network[NNBackProp.network.length - 1][NNMathUtils.maxValueIndex(out)].sigOutput;
        StringBuilder txt = new StringBuilder("The letter is: ");
        txt.append((char) asciiCode);
        txt.append("\n");
        txt.append("Error: ");
        txt.append(nn.getOutputError());
        JOptionPane.showMessageDialog(this, txt.toString());
        nn.setVerbose(false);
        if (checkVerboseTrain.isSelected()) {
            System.out.println("Time to classify: " + time);
            System.out.println("Probability : " + sigOut);
        }
    }//GEN-LAST:event_btTestActionPerformed

    private void btClearAllActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btClearAllActionPerformed
        // TODO add your handling code here:
        JButton b;
        for (Component c : panelMatriceButtons.getComponents()) {
            b = (JButton) c;
            b.setText(".");
            b.setBackground(Color.LIGHT_GRAY);
        }
    }//GEN-LAST:event_btClearAllActionPerformed

    double[] generateTestArray() {
        Component[] components = panelMatriceButtons.getComponents();
        double[] instance = new double[components.length];
        JButton b;
        for (int i = 0; i < components.length; i++) {
            b = (JButton) components[i];
            if (b.getText().equals(".")) {
                instance[i] = 0;
            } else {
                instance[i] = 1;
            }
        }
        return instance;
    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(CharRecogGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(CharRecogGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(CharRecogGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(CharRecogGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new CharRecogGUI().setVisible(true);
            }
        });
    }

    @Override
    public void notifyObserver() {
        progressTrain.setValue((int) ((nn.epochCount / (double) NNBackProp.epoch) * 100));
    }

    List<Instance> instances;
    File dataset;
    int cols, rows;
    NNBackProp nn;
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btClearAll;
    private javax.swing.JButton btLoad;
    private javax.swing.JButton btSelectFile;
    private javax.swing.JButton btTest;
    private javax.swing.JButton btTrain;
    private javax.swing.JCheckBox checkBias;
    private javax.swing.JCheckBox checkDrawMode;
    private javax.swing.JCheckBox checkSeedWeights;
    private javax.swing.JCheckBox checkVerboseTrain;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel lblEpoch;
    private javax.swing.JLabel lblErrorRate;
    private javax.swing.JPanel panelMatriceButtons;
    private javax.swing.JPanel panelSupport;
    private javax.swing.JProgressBar progressTrain;
    private javax.swing.JSlider sliderEpoch;
    private javax.swing.JSlider sliderLearningRate;
    private javax.swing.JTextField txtFilePath;
    private javax.swing.JTextField txtNumInstances;
    private org.jdesktop.beansbinding.BindingGroup bindingGroup;
    // End of variables declaration//GEN-END:variables

}
